services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cuda-image-processor
    restart: unless-stopped
    
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu, compute, utility]
    
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility,graphics
    
    expose:
      - "8080"
    
    networks:
      - traefik
    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cuda-app.rule=PathPrefix(`/`)"
      - "traefik.http.routers.cuda-app.entrypoints=websecure"
      - "traefik.http.routers.cuda-app.tls=true"
      - "traefik.http.services.cuda-app.loadbalancer.server.port=8080"
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.filename=/config/traefik-config.yml"
      - "--providers.file.watch=true"
      - "--entrypoints.websecure.address=:443"
      - "--log.level=INFO"
    
    ports:
      - "443:443"
      - "8081:8080"
    
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./.secrets:/certs:ro"
      - "./traefik-config.yml:/config/traefik-config.yml:ro"
    
    networks:
      - traefik
    
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  jaeger:
    image: jaegertracing/all-in-one:1.52
    container_name: jaeger
    restart: unless-stopped
    
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
    
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    
    networks:
      - traefik
    
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:14269/"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.91.0
    container_name: otel-collector
    restart: unless-stopped
    
    command: ["--config=/etc/otel-collector-config.yaml"]
    
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    
    ports:
      - "4317:4317"
      - "4318:4318"
    
    networks:
      - traefik
    
    depends_on:
      jaeger:
        condition: service_healthy
    
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:13133/"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  flipt:
    image: flipt/flipt:latest
    container_name: flipt
    restart: unless-stopped
    
    expose:
      - "9000"
    
    volumes:
      - ./.ignore/storage/flipt:/var/opt/flipt
    
    environment:
      - FLIPT_LOG_LEVEL=info
      - FLIPT_DB_URL=file:/var/opt/flipt/flipt.db
      - FLIPT_META_TELEMETRY_ENABLED=false
    
    networks:
      - traefik
    
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  traefik:
    driver: bridge

