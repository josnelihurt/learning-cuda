// @generated by protoc-gen-connect-es v1.7.0 with parameter "target=ts"
// @generated from file image_processing.proto (package cuda_learning, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GetStreamConfigRequest, GetStreamConfigResponse, ProcessImageRequest, ProcessImageResponse, SyncFeatureFlagsRequest, SyncFeatureFlagsResponse } from "./image_processing_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service cuda_learning.ImageProcessorService
 */
export const ImageProcessorService = {
  typeName: "cuda_learning.ImageProcessorService",
  methods: {
    /**
     * @generated from rpc cuda_learning.ImageProcessorService.ProcessImage
     */
    processImage: {
      name: "ProcessImage",
      I: ProcessImageRequest,
      O: ProcessImageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * TODO: Implement video streaming using Connect-RPC bidirectional streaming
     *
     * @generated from rpc cuda_learning.ImageProcessorService.StreamProcessVideo
     */
    streamProcessVideo: {
      name: "StreamProcessVideo",
      I: ProcessImageRequest,
      O: ProcessImageResponse,
      kind: MethodKind.BiDiStreaming,
    },
  }
} as const;

/**
 * @generated from service cuda_learning.ConfigService
 */
export const ConfigService = {
  typeName: "cuda_learning.ConfigService",
  methods: {
    /**
     * @generated from rpc cuda_learning.ConfigService.GetStreamConfig
     */
    getStreamConfig: {
      name: "GetStreamConfig",
      I: GetStreamConfigRequest,
      O: GetStreamConfigResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc cuda_learning.ConfigService.SyncFeatureFlags
     */
    syncFeatureFlags: {
      name: "SyncFeatureFlags",
      I: SyncFeatureFlagsRequest,
      O: SyncFeatureFlagsResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

